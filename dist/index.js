!function(t){var e={};function s(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return t[a].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=t,s.c=e,s.d=function(t,e,a){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(s.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)s.d(a,r,function(e){return t[e]}.bind(null,r));return a},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=1)}([,function(t,e,s){"use strict";s.r(e);new class{constructor(t,e,s){this.backdrop=document.getElementById(t),this.frontLayer=document.getElementById(e),this.menuButton=document.getElementById(s)}register(){this.registerButtonEvent(),this.registerFrontLayerEvent()}registerButtonEvent(){this.menuButton.addEventListener("click",()=>{this.backdrop.classList.contains("hidden")?this.backdrop.classList.remove("hidden"):this.backdrop.classList.add("hidden"),this.menuButton.classList.contains("open")?this.menuButton.classList.remove("open"):this.menuButton.classList.add("open")})}registerFrontLayerEvent(){this.frontLayer.addEventListener("click",()=>{this.backdrop.classList.add("hidden"),this.menuButton.classList.remove("open")})}}("menu","front-layer","show-menu").register();let a=new class{constructor(t){this.multiSelects=document.getElementsByClassName(t)}register(){for(let t of this.multiSelects)this.selected||(this.selected=t.id),t.addEventListener("click",t=>{for(let t of this.multiSelects)t.classList.remove("selected");t.target.classList.add("selected"),this.selected=t.target.id})}getSelection(){return this.selected}}("multi-item");a.register();let r=new class{constructor(t,e){this.dataLoaded=!1;let s=new XMLHttpRequest;s.addEventListener("load",t=>{this.data=t.target.response,this.dataLoaded=!0,console.log("Data for decoder loaded.")}),s.open("GET",t),s.responseType="json",s.send(),this.game=e}setGame(t){this.game=t}decodeText(t,e=0){if(!this.dataLoaded){let s=e*e*20;return console.log("Decoder not ready, retrying in:",s.toString()+"ms"),window.setTimeout(this.decodeText.bind(this,t,e+1),s),-1}let s=this.data[this.game]["text-encoding"],a="";for(let e of t)a+=s[e];return a}}("./ressources/encoding.json","redBlue");new class{constructor(t,e,s){this.fileInput=document.getElementById(t),this.submitBtn=document.getElementById(e),this.btnLabel=document.getElementById(s)}extractData(t){let e=this.fileInput.files;if(e.length<1)return console.log("No file received."),1;let s=e[0];if(s.size>104857600)return console.log("File size exceeds 100MB"),2;let a=new FileReader;return a.readAsArrayBuffer(s),a.addEventListener("load",()=>{let e=new Uint8Array(a.result);t(e)}),a}register(t=function(){}){let e,s=this.fileInput.files;e=s.length>0?s[0].name:"Upload ROM-File",this.btnLabel.innerText=e,this.fileInput.addEventListener("change",()=>{let t,e=this.fileInput.files;t=e.length>0?e[0].name:"Upload ROM-File",this.btnLabel.innerText=t}),this.submitBtn.addEventListener("click",()=>{this.extractData(t)})}}("rom-select","submit-btn","upload-label").register(t=>{let e,s=a.getSelection();switch(r.setGame(s),s){case"redBlue":e=new class{constructor(t,e){this.rawData=t,this.decoder=e,this.processedData={}}extract(){this.getRomName(),this.getMapHeaders(this.getMapHeaderAddresses()),this.debug()}debug(){console.log(this.processedData)}getPointer(t,e){return parseInt(e.toString(16)+t.toString(16),16)%16384}getRomName(){this.processedData.romName=String.fromCharCode(...this.rawData.slice(308,324)).replace(/\0/g,"")}getMapHeaderAddresses(){const t=Array.from(this.rawData.slice(49725,49973)).map(t=>16384*t),e=this.rawData.slice(430,926);let s=[],a=[];for(let t=0;t<e.length;t+=2)s.push(this.getPointer(e[t],e[t+1]));for(let e=0;e<s.length;e++)a.push(t[e]+s[e]);return a}getMapHeaders(t){this.processedData.map=[];for(let e of t){let t={memoryBank:Math.floor(e/16384),tilesetId:this.rawData[e],height:this.rawData[e+1],width:this.rawData[e+2],connection:null,connections:{},pointers:{mapData:this.getPointer(this.rawData[e+3],this.rawData[e+4]),textPointers:this.getPointer(this.rawData[e+5],this.rawData[e+6]),script:this.getPointer(this.rawData[e+7],this.rawData[e+8])}},s=9;t.connection=this.rawData[e+s++];for(let a=3;a>=0;a--){let r="";switch(a){case 3:r="north";break;case 2:r="south";break;case 1:r="west";break;case 0:r="east"}t.connection&1<<a&&(t.connections[r]={mapId:this.rawData[e+s++],pointers:{connectBlock:this.getPointer(this.rawData[e+s++],this.rawData[e+s++]),currentBlock:this.getPointer(this.rawData[e+s++],this.rawData[e+s++])},biggness:this.rawData[e+s++],mapWidth:this.rawData[e+s++],yPos:this.rawData[e+s++],xPos:this.rawData[e+s++],window:256*this.rawData[e+s++]+this.rawData[e+s++]})}t.pointers.objectData=this.getPointer(this.rawData[e+s++],this.rawData[e+s++]),this.processedData.map.push(t)}}getMapData(){for(let t of this.processedData.map){t.pointers.mapData;t.memoryBank,t.width,t.height}}}(t,r);break;default:return 1}e.extract()})}]);